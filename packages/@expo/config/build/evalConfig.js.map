{"version":3,"file":"evalConfig.js","names":["_esbuild","data","require","_fs","_requireFromString","_interopRequireDefault","_Errors","_Serialize","_environment","e","__esModule","default","evalConfig","configFile","request","contents","readFileSync","result","code","transformSync","loader","endsWith","format","target","sourcefile","requireString","error","errors","Error","formatMessagesSync","kind","join","resolveConfigExport","hasBaseStaticConfig","NON_STANDARD_SYMBOL","config","exportedObjectType","Promise","ConfigError","mayHaveUnusedStaticConfig","_hasBaseStaticConfig","expo","serializeSkippingMods"],"sources":["../src/evalConfig.ts"],"sourcesContent":["import { transformSync, formatMessagesSync } from 'esbuild';\nimport { readFileSync } from 'fs';\nimport requireString from 'require-from-string';\n\nimport { AppJSONConfig, ConfigContext, ExpoConfig } from './Config.types';\nimport { ConfigError } from './Errors';\nimport { serializeSkippingMods } from './Serialize';\nimport { NON_STANDARD_SYMBOL } from './environment';\n\ntype RawDynamicConfig = AppJSONConfig | Partial<ExpoConfig> | null;\n\nexport type DynamicConfigResults = {\n  config: RawDynamicConfig;\n  exportedObjectType: string;\n  mayHaveUnusedStaticConfig: boolean;\n};\n\n/**\n * Transpile and evaluate the dynamic config object.\n * This method is shared between the standard reading method in getConfig, and the headless script.\n *\n * @param options configFile path to the dynamic app.config.*, request to send to the dynamic config if it exports a function.\n * @returns the serialized and evaluated config along with the exported object type (object or function).\n */\nexport function evalConfig(\n  configFile: string,\n  request: ConfigContext | null\n): DynamicConfigResults {\n  const contents = readFileSync(configFile, 'utf8');\n  let result: any;\n  try {\n    const { code } = transformSync(contents, {\n      loader: configFile.endsWith('.ts') ? 'ts' : 'js',\n      format: 'cjs',\n      target: 'node14',\n      sourcefile: configFile,\n    });\n\n    result = requireString(code, configFile);\n  } catch (error: any) {\n    if (error.errors) {\n      throw new Error(\n        formatMessagesSync(error.errors, {\n          kind: 'error',\n        }).join('\\n')\n      );\n    }\n\n    throw error;\n  }\n  return resolveConfigExport(result, configFile, request);\n}\n\n/**\n * - Resolve the exported contents of an Expo config (be it default or module.exports)\n * - Assert no promise exports\n * - Return config type\n * - Serialize config\n *\n * @param result\n * @param configFile\n * @param request\n */\nexport function resolveConfigExport(\n  result: any,\n  configFile: string,\n  request: ConfigContext | null\n) {\n  // add key to static config that we'll check for after the dynamic is evaluated\n  // to see if the static config was used in determining the dynamic\n  const hasBaseStaticConfig = NON_STANDARD_SYMBOL;\n  if (request?.config) {\n    // @ts-ignore\n    request.config[hasBaseStaticConfig] = true;\n  }\n  if (result.default != null) {\n    result = result.default;\n  }\n  const exportedObjectType = typeof result;\n  if (typeof result === 'function') {\n    result = result(request);\n  }\n\n  if (result instanceof Promise) {\n    throw new ConfigError(`Config file ${configFile} cannot return a Promise.`, 'INVALID_CONFIG');\n  }\n\n  // If the key is not added, it suggests that the static config was not used as the base for the dynamic.\n  // note(Keith): This is the most common way to use static and dynamic config together, but not the only way.\n  // Hence, this is only output from getConfig() for informational purposes for use by tools like Expo Doctor\n  // to suggest that there *may* be a problem.\n  const mayHaveUnusedStaticConfig =\n    // @ts-ignore\n    request?.config?.[hasBaseStaticConfig] && !result?.[hasBaseStaticConfig];\n  if (result) {\n    delete result._hasBaseStaticConfig;\n  }\n\n  // If the expo object exists, ignore all other values.\n  if (result?.expo) {\n    result = serializeSkippingMods(result.expo);\n  } else {\n    result = serializeSkippingMods(result);\n  }\n\n  return { config: result, exportedObjectType, mayHaveUnusedStaticConfig };\n}\n"],"mappings":"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","ignoreList":[]}